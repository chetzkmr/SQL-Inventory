CREATE DATABASE INVENTORY;
USE INVENTORY;

CREATE TABLE SUPPLIER
(
SID CHAR(5) PRIMARY KEY,
SNAME VARCHAR(20) NOT NULL,
SADD VARCHAR (30) NOT NULL,
SCITY VARCHAR (15) DEFAULT 'DELHI',
SPHONE CHAR(15) UNIQUE,
EMAIL VARCHAR(30),
);
SELECT *FROM SUPPLIER;

CREATE TABLE PRODUCT
(
PID CHAR(5) PRIMARY KEY,
PDESC VARCHAR (40) NOT NULL,
PRICE INT CHECK (PRICE>0),
CATEGORY CHAR(2) CHECK (CATEGORY IN ('IT','HC','HA')),
SID CHAR(5) FOREIGN KEY REFERENCES SUPPLIER (SID),
);
SELECT *FROM  PRODUCT;

CREATE TABLE STOCK
(
PID CHAR(5) FOREIGN KEY REFERENCES PRODUCT(PID),
SQTY INT CHECK (SQTY >=0),
ROL INT CHECK (ROL>0),
MOQ INT CHECK (MOQ>=5),
);
SELECT *FROM STOCK

CREATE TABLE CUST
(CID CHAR(5) PRIMARY KEY,
CNAME VARCHAR(30) NOT NULL,
ADDRESS VARCHAR (40) NOT NULL,
CITY VARCHAR(20) NOT NULL,
PHONE CHAR(15) NOT NULL UNIQUE,
EMAIL VARCHAR(30) NOT NULL,
DOB DATE CHECK (DOB<'1-JAN-2000'),
);
SELECT *FROM CUST

CREATE TABLE ORDERS
(
OID CHAR (5) PRIMARY KEY,
ODATE DATE,
PID CHAR(5) FOREIGN KEY REFERENCES PRODUCT(PID),
CID CHAR (5) FOREIGN KEY REFERENCES CUST,
OQTY INT CHECK (OQTY<=1),
);

CREATE TABLE PURCHASE
(
PID CHAR(5),
SID CHAR(5),
PQTY INT,
DOP DATE
);

--ENTERING VALUES INTO TABLE SUPPPLIER
INSERT INTO SUPPLIER
VALUES ('S0001', 'Tidal Wave', 'New Laipat Rai Market Chandani Chowk', 'DELHI', '+914567854845','TIDAL@GMAIL.COM')
INSERT INTO SUPPLIER
VALUES ('S0002', 'Warrior TechServices', 'Mehrauli Badarpur Rd J Block Saket', 'DELHI', '+914511154845','WARIOR@GMAIL.COM')
INSERT INTO SUPPLIER
VALUES ('S0003', 'Drive Web Consulting', 'First Floor Sarvapriya Vihar Vijay Mandal Enclave', 'DELHI', '+18002002244','@GMAIL.COM')
INSERT INTO SUPPLIER
VALUES ('S0004', 'Theory Solutions', 'Malcha Marg Shopping Centre Chanakyapuri', 'DELHI', '+01146068122','THORY@GMAIL.COM')
INSERT INTO SUPPLIER
VALUES ('S0005', 'Beyond Data Experts', 'Malkaganj Marg, University Enclave', 'DELHI', '+01127666382','BEYOND@GMAIL.COM')

SELECT *FROM SUPPLIER

--ENTERING VALUES INTO PRODUCT
INSERT INTO PRODUCT
VALUES ('P0001','KEYBOARD_0258',2000,'IT','S0001')

INSERT INTO PRODUCT
VALUES ('P0002','GRINDER_268',5000,'HA','S0002')
INSERT INTO PRODUCT
VALUES ('P0003','Health Drinks',500,'HC','S0003')
INSERT INTO PRODUCT
VALUES ('P0004','MOUSE_058',750,'IT','S0004')
INSERT INTO PRODUCT
VALUES ('P0005','WASHING MACHINE_S21',10000,'HA','S0002')
INSERT INTO PRODUCT
VALUES ('P0006','Steam Vaporizer_23',399,'HC','S0005')
INSERT INTO PRODUCT
VALUES ('P0007','DISPLAY_D34',15000,'IT','S0001')
INSERT INTO PRODUCT
VALUES ('P0008','MIXER_M55',8000,'HA','S0002')
INSERT INTO PRODUCT
VALUES ('P0009','Steam Inhaler',1500,'HC','S0003')
INSERT INTO PRODUCT
VALUES ('P0010','KEYBOARD_LED',3000,'IT','S0001')
INSERT INTO PRODUCT
VALUES ('P0011','REFRIGERATOR',25000,'HA','S0002')
INSERT INTO PRODUCT
VALUES ('P0012','Neck Massager',1400,'HC','S0005')
INSERT INTO PRODUCT
VALUES ('P0013','CHARGER',250,'IT','S0004')
INSERT INTO PRODUCT
VALUES ('P0014','MICROWAVE',9000,'HA','S0002')
INSERT INTO PRODUCT
VALUES ('P0015','INHALER',2500,'HC','S0003')
SELECT *FROM PRODUCT

SELECT *FROM CUST
-- CREATING PROCEDURE FOR CUST TABLE--
CREATE PROCEDURE CUSTADD @N AS VARCHAR(30),@AD AS VARCHAR (50), @C AS VARCHAR(20), @P AS VARCHAR(15),@E AS VARCHAR(40), @D AS DATE
AS
BEGIN
	DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);
	SET @I=(NEXT VALUE FOR CUSTSEQ);
	SET @ID=DBO.CID ('C',@I);

	INSERT INTO CUST 
	VALUES (@ID,@N,@AD,@C,@P,@E,@D)

	SELECT *FROM CUST
	WHERE CID=@ID
END

CREATE SEQUENCE CUSTSEQ
AS INT
START WITH 1
INCREMENT BY 1;

CREATE FUNCTION CID (@C AS CHAR (1),@I AS INT)
RETURNS CHAR (5)
AS
BEGIN
	DECLARE @ID AS CHAR(5)
	IF @I <10
		SET @ID=CONCAT(@C,'000',@I);
	ELSE IF @I<100
		SET @ID=CONCAT(@C,'00',@I);
	ELSE IF @I<1000
		SET @ID=CONCAT(@C,'0',@I);
	ELSE IF @I<10000
		SET @ID=CONCAT(@C,@I);
	ELSE 
		SET @ID='NA';
	RETURN @ID;
END

CUSTADD 'RAMESH KUMAR','ANDHERI WEST','MUMBAI','+914562887832','RMKUM@GMAIL.COM','12-DEC-1998';
CUSTADD 'VIRAJ SHARMA','3RD STREET EAST','DELHI','+919785486300','VSHARMA@YAHOO.COM','19-JUN-1990';
CUSTADD 'RAGAV KAPOOR','CHANAKYA PURA','DELHI','+915787989693','RGKP@GMAIL.COM','09-APR-1980';
CUSTADD 'MOHAN MISHRA','KORAMANGALA','BANGALORE','+918787964555','MMJ@YAHOO.COM','30-JAN-1994';
CUSTADD 'ROHAN SHINDE','KURLA WEST','KOLKATTA','+919984578231','RSHINDE@GMAIL.COM','12-MAY-1985';

SELECT * FROM ORDERS
--CREATING PROCEDURE FOR ORDERS
CREATE SEQUENCE ORDERSEQ
START WITH 1
INCREMENT BY 1;
DROP SEQUENCE ORDERSEQ


CREATE PROCEDURE ORDERADD @PID AS VARCHAR(5),@CID AS VARCHAR(5),@OQ AS INT
AS
BEGIN
	DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);
	SET @I=(NEXT VALUE FOR ORDERSEQ);
	SET @ID=DBO.CID('O',@I);
	INSERT INTO ORDERS
	VALUES(@ID, GETDATE(), @PID,@CID,@OQ)
	
	SELECT *FROM ORDERS
	WHERE OID=@ID;
END
DROP PROCEDURE ORDERADD

ORDERADD 'P0010','C0004',1
ORDERADD 'P0005','C0002',2
ORDERADD 'P0015','C0005',5
ORDERADD 'P0003','C0003',7
ORDERADD 'P0007','C0001',3

SELECT *FROM PRODUCT
SELECT *FROM CUST
SELECT *FROM ORDERS
--
-- CREATING PROCEDURE FOR PRODUCT--
--CREATING SEQUENCE--
CREATE SEQUENCE PROSEQ
START WITH 16
INCREMENT BY 1;

--CREATING PROCEDURE--
CREATE PROCEDURE PROADD @PD AS VARCHAR(40),@PR AS INT,@CA AS CHAR (2),@SID AS CHAR (5)
AS
BEGIN
	DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);
	SET @I=(NEXT VALUE FOR PROSEQ);
	SET @ID=DBO.CID('P',@I)
	
	INSERT INTO PRODUCT VALUES
	(@ID,@PD,@PR,@CA,@SID)
	SELECT *FROM PRODUCT WHERE PID=@ID;
END

SELECT * FROM SUPPLIER
SELECT * FROM PRODUCT
PROADD 'KEYBOARD WIRELESS',3599,'IT','S0001'

--CREATING PROCEDURE FOR SUPPLIER--
--CREATING SEQUENCE--
CREATE SEQUENCE SUPSEQ
START WITH 6
INCREMENT BY 1;

--CREATING PROCEDURE SUPPLIER--
CREATE PROCEDURE SUPADD @N AS VARCHAR(20),@ADRS AS VARCHAR(30),@CITY AS VARCHAR(30),@PH AS CHAR (16),@EMAIL AS VARCHAR(30)
AS
BEGIN
	DECLARE @I AS INT;
	DECLARE @ID AS CHAR(5);
	SET @I=(NEXT VALUE FOR SUPSEQ)
	SET @ID=DBO.CID('S',@I)
	INSERT INTO SUPPLIER VALUES (@ID,@N,@ADRS,@CITY,@PH,@EMAIL);
	SELECT * FROM SUPPLIER WHERE SID=@ID
END;

SUPADD 'Techno first','Chandni chowk','delhi','+918475362555','techno@yahoo.com'

update supplier SET EMAIL ='DWC@GMAIL.COM' WHERE SID='S0003'

SELECT * FROM PRODUCT
SELECT *FROM STOCK
INSERT INTO STOCK VALUES ('P0001',200,50,60)
INSERT INTO STOCK VALUES ('P0002',300,40,20)
INSERT INTO STOCK VALUES ('P0003',500,10,90)
INSERT INTO STOCK VALUES ('P0004',350,70,60)
INSERT INTO STOCK VALUES ('P0005',400,25,15)
INSERT INTO STOCK VALUES ('P0006',250,10,10)
INSERT INTO STOCK VALUES ('P0007',340,60,50)
INSERT INTO STOCK VALUES ('P0008',450,80,60)
INSERT INTO STOCK VALUES ('P0009',460,30,80)
INSERT INTO STOCK VALUES ('P0010',480,35,55)
INSERT INTO STOCK VALUES ('P0011',360,50,40)
INSERT INTO STOCK VALUES ('P0012',390,40,60)
INSERT INTO STOCK VALUES ('P0013',290,10,10)
INSERT INTO STOCK VALUES ('P0014',490,30,40)
INSERT INTO STOCK VALUES ('P0015',500,30,30)
INSERT INTO STOCK VALUES ('P0016',460,80,90)

SELECT *FROM CUST
SELECT *FROM ORDERS 
SELECT *FROM STOCK
SELECT * FROM PRODUCT

--CREATING TRIGGERS--
CREATE TRIGGER STOCKORDER
ON ORDERS
FOR INSERT
AS
BEGIN
	UPDATE STOCK SET SQTY=SQTY-(SELECT OQTY FROM INSERTED)
	WHERE PID=(SELECT PID FROM INSERTED);
END;

--DELETING ON PRODUCT TABLE--
CREATE TRIGGER PRODDELETE
ON PRODUCT
FOR DELETE
AS
BEGIN
	DELETE FROM STOCK WHERE PID=(SELECT PID FROM DELETED);
END;

--WHILE UPDATING ORDER TABLE--
CREATE TRIGGER ORDERUPDATE
ON ORDERS
FOR UPDATE
AS
BEGIN
	DECLARE @OQ AS INT
	DECLARE @NQ AS INT
	SET @OQ= (SELECT OQTY FROM DELETED)
	SET @NQ= (SELECT OQTY FROM INSERTED)
	UPDATE STOCK SET SQTY=SQTY+@OQ-@NQ
	WHERE PID=(SELECT PID FROM INSERTED);
END

--creating trigger for order insert --
CREATE TRIGGER ORDERINSERT
ON ORDERS
FOR INSERT
AS
BEGIN
	DECLARE @QR AS INT;
	DECLARE @QS AS INT;
	DECLARE @RL AS INT;
	DECLARE @MQ AS INT;
	DECLARE @PI AS CHAR(5);
	DECLARE @SI AS CHAR(5);

	SET @PI = (SELECT PID FROM INSERTED);
	SET @SI = (SELECT SID FROM PRODUCT WHERE PID = @PI);
	SET @QR = (SELECT OQTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID=(SELECT PID FROM INSERTED));
	SET @RL = (SELECT ROL FROM STOCK WHERE PID=(SELECT PID FROM INSERTED));
	SET @MQ = (SELECT MOQ FROM STOCK WHERE PID=(SELECT PID FROM INSERTED));

	IF @QS >= @QR
		BEGIN
			UPDATE STOCK SET SQTY = SQTY - @QR
			WHERE PID = (SELECT PID FROM INSERTED);

			IF @QS <= @RL
				BEGIN
					INSERT INTO PURCHASE
					VALUES(@PI, @SI, @MQ, GETDATE());
				END
			COMMIT;
			PRINT('ORDER ACCEPTED!!!');
		END;
	ELSE
		BEGIN
			ROLLBACK;
			PRINT('INSUFFICIENT QUANTITY, ORDER REJECTED');
		END;
END;
DROP TRIGGER ORDERINSERT
ORDERADD 'P0001','C0003', 180
ORDERADD 'P0001','C0003', 5


SELECT *FROM CUST
SELECT *FROM ORDERS 
SELECT *FROM STOCK
SELECT * FROM PRODUCT
SELECT * FROM PURCHASE








DECLARE @OQ AS INT;
	DECLARE @SQ AS INT;
	SET @OQ=(SELECT OQTY FROM INSERTED);
	SET @SQ=(SELECT SQTY FROM STOCK whERE PID=(SELECT PID FROM INSERTED));
	IF @SQ>=@OQ
		BEGIN
			UPDATE STOCK SET SQTY=SQTY-@OQ WHERE PID=(SELECT PID FROM INSERTED);
			COMMIT;
			print('Order Accepted!!');
			SELECT *FROM ORDERS WHERE OID=(SELECT OID FROM INSERTED)
		END;
	ELSE
		BEGIN
			PRINT ('Order Rejected!!')
			ROLLBACK;
		END;